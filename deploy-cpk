#!/usr/bin/env bash

function print_usage {
    cat <<EOF

USAGE: deploy_cpk [-t type] [-b branch] [--push-version ] [--help|-h]

  -t                   Build type:
                           local  - for development on local machine, source code is mounted from external source
                           deploy - for deployment on production/testing environment, source code is downloaded and included in image
  -b                   Use this git branch as source code, build type must be deploy
  --help|-h            Print usage

EOF
}

function last_commit {
    local branch=$1
    local url="https://api.github.com/repos/moravianlibrary/CPK/commits?sha=$branch"
    local sha=`curl "$url" | php -r "echo (string) json_decode(file_get_contents('php://stdin'))[0]->sha;"`
    echo $sha
}

vufind_branch="master"
build_type="local"
push_version="false"
# extract options and their arguments into variables.
while true ; do
    case "$1" in
        -b)
            case "$2" in
                "") shift 2 ;;
                *) vufind_branch=$2;
                   echo "Processing argument: $1 = $2";
                   shift 2 ;;
            esac ;;
         -t)
            case "$2" in
                "") shift 2 ;;
                *) echo "Processing argument: $1 = $2";
                   build_type=$2
                   shift 2 ;;
            esac ;;
         --push-version|-p)
                case "$2" in
                "") shift 2 ;;
                *) echo "Processing argument: $1 = $2";
                   push_version=$2
                   shift 2 ;;
            esac ;;
         --help|-h)
            print_usage;
            exit 0;;
        *) break ;;
    esac
done

LAST_COMMIT=`last_commit $vufind_branch`

image_name="cpk_vufind"
build_args="--build-arg PARAM_VUFIND_COMMIT_HASH=${LAST_COMMIT}"

if [[ ! -z  $vufind_branch ]]; then
    build_args="$build_args --build-arg PARAM_VUFIND_BRANCH=$vufind_branch"
    image_name="${image_name}_${vufind_branch}"
fi

docker_compose_file="docker-compose.${build_type}.yaml"

export IMAGE_NAME="${image_name}"
export HTTP_PORT="8080"
export HTTPS_PORT="8443"
docker-compose build php-extensions
docker-compose build apache-shibboleth
docker-compose -f "$docker_compose_file" build $build_args vufind
docker-compose -f "$docker_compose_file" up
